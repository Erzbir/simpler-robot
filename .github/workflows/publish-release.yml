name: Publish Release
on:
  push:
    tags:
      - v3.**.**

env:
  GPG_KEY_ID: ${{ secrets.SIGN_KEY_ID }}
  GPG_SECRET_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  GPG_PASSWORD: ${{ secrets.SIGN_PASS }}
  OSSRH_USER: ${{ secrets.OSS_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSS_PASSWORD }}
  GRADLE_OPTS: "-Xmx4G -Xms4G -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8"

jobs:
  run-test:
    name: Run Test
    runs-on: ubuntu-latest
    steps:
      # 检出仓库代码
      - name: Check Out Repo
        uses: actions/checkout@v2
        with:
          submodules: true

      # setup Java
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8

      # setup Gradle
      - name: Gradle Publish Release
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: clean build test

  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: run-test
    steps:
      # 检出仓库代码
      - name: Check Out Repo
        uses: actions/checkout@v2

      # setup Java
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8

      # the gpg
      - name: Decode gpg file
        id: decode-gpg-file
        run: |
          mkdir -p ~/.gradle
          echo "${{ secrets.GPG_B64 }}" > ~/.gradle/secring.gpg.b64
          base64 -d ~/.gradle/secring.gpg.b64 > ~/.gradle/secring.gpg
          echo "::set-output name=SEC_KEY_RING_FILE::$(echo ~/.gradle/secring.gpg)"

      # setup Gradle
      - name: Gradle Publish Release
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: clean build publishToSonatype closeAndReleaseStagingRepository --warning-mode all --info -Porg.gradle.jvmargs="org.gradle.jvmargs=-Xmx4G -Xms4G -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8"
        env:
          SIMBOT_IS_SNAPSHOT: false
          SIMBOT_RELEASES_ONLY: true
          SIMBOT_SNAPSHOT_ONLY: false

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: publish-release
    permissions:
      contents: write
    steps:
      # 检出仓库代码
      - name: Check Out Repo
        uses: actions/checkout@v2

        # Create gitHub release
      - name: Create Github Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ secrets.PUSH_TOKEN }}
          body_path: .changelog/${{ github.ref_name }}.md
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, 'preview') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}


  publish-snapshot:
    name: Publish snapshot
    runs-on: ubuntu-latest
    needs: publish-release
    steps:
      # 检出仓库代码
      - name: Check out repo
        uses: actions/checkout@v2

      # setup Java
      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8

      # setup Gradle
      - name: Gradle publish snapshot
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: clean build createChangelog publishToSonatype closeAndReleaseStagingRepository -Porg.gradle.workers.max=16 -Porg.gradle.parallel=true
        env:
          SIMBOT_IS_SNAPSHOT: true
          SIMBOT_SNAPSHOT_ONLY: true
          SIMBOT_RELEASES_ONLY: false

  deploy-doc:
    name: Deploy API Doc
    needs: publish-release
    runs-on: ubuntu-latest
    steps:
      # 检出仓库代码
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      # setup Java
      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'gradle'

      - name: Create gradle.properties
        run: |
          echo "org.gradle.parallel=true" > gradle.properties
          echo "org.gradle.workers.max=16" >> gradle.properties
          echo "org.gradle.daemon=false" >> gradle.properties
          echo "org.gradle.jvmargs=-Xmx8G -Xms2G -XX:MaxMetaspaceSize=1G -Dfile.encoding=UTF-8" >> gradle.properties

      # setup Gradle
      - name: Gradle generate documentation
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: clean build dokkaHtmlMultiModuleAndPost
        env:
          SIMBOT_IS_SNAPSHOT: false

      # https://github.com/marketplace/actions/github-pages-action
      - name: Push to doc repository
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PUSH_TOKEN }}
          external_repository: simple-robot-library/simbot3-main-apiDoc
          publish_branch: gh-pages  # default: gh-pages
          keep_files: true
          publish_dir: ./dokka/html


